<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.spring.javaformat</groupId>
		<artifactId>spring-javaformat-intellij-idea</artifactId>
		<version>0.0.36-SNAPSHOT</version>
	</parent>
	<artifactId>spring-javaformat-intellij-idea-runtime</artifactId>
	<packaging>pom</packaging>
	<name>Spring JavaFormat IntelliJ IDEA Runtime</name>
	<properties>
		<main.basedir>${basedir}/../..</main.basedir>
		<intellij.binary>https://download.jetbrains.com/idea/ideaIC-2022.3.2.tar.gz</intellij.binary>
		<intellij.source>https://github.com/JetBrains/intellij-community/archive/idea/223.8617.56.zip</intellij.source>
		<intellij.root>idea-IC-223.8617.56</intellij.root>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.googlecode.maven-download-plugin</groupId>
				<artifactId>download-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>download-intellij-binary</id>
						<phase>validate</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>${intellij.binary}</url>
							<outputFileName>intellij.tar.gz</outputFileName>
						</configuration>
					</execution>
					<execution>
						<id>download-intellij-source</id>
						<phase>install</phase>
						<goals>
							<goal>wget</goal>
						</goals>
						<configuration>
							<url>${intellij.source}</url>
							<outputFileName>intellij-source.zip</outputFileName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare-intellij</id>
						<phase>install</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<gunzip src="${project.build.directory}/intellij.tar.gz"/>
								<untar src="${project.build.directory}/intellij.tar"
										dest="${project.build.directory}/intellij">
									<patternset>
										<include name="${intellij.root}/lib/*.jar" />
										<include name="${intellij.root}/plugins/maven/lib/*.jar" />
										<include name="${intellij.root}/plugins/maven-server/lib/*.jar" />
										<include name="${intellij.root}/plugins/gradle/lib/*.jar" />
									</patternset>
									<mapper type="flatten" />
								</untar>
								<unzip
									src="${project.build.directory}/intellij-source.zip"
									dest="${project.build.directory}/intellij-source">
									<patternset>
										<include
											name="*/platform/core-api/src/**" />
										<include
											name="*/platform/core-impl/src/**" />
										<include
											name="*/platform/platform-impl/src/**" />
										<include
											name="*/platform/util/src/**" />
										<include
											name="*/platform/util-rt/src/**" />
										<include
											name="*/platform/util/base/src/**" />
										<include
											name="*/platform/util/ui/src/**" />
										<include
											name="*/platform/extensions/src/**" />
										<include
											name="*/platform/service-container/src/**" />
										<include
											name="*/plugins/maven/src/**" />
										<include
											name="*/plugins/gradle/src/**" />
										<include
											name="*/plugins/gradle/tooling-extension-api/src/**" />
										<include
											name="*/plugins/gradle/tooling-extension-impl/src/**" />
									</patternset>
									<cutdirsmapper dirs="1"/>
								</unzip>
								<zip
									destfile="${project.build.directory}/intellij-source/util-sources.zip"
									basedir="${project.build.directory}/intellij-source/platform/util/src" />
								<zip
									destfile="${project.build.directory}/intellij-source/util_rt-sources.zip"
									basedir="${project.build.directory}/intellij-source/platform/util-rt/src" />
								<zip
									destfile="${project.build.directory}/intellij-source/maven-sources.zip"
									basedir="${project.build.directory}/intellij-source/plugins/maven/src" />
								<zip
									destfile="${project.build.directory}/intellij-source/gradle-sources.zip"
									basedir="${project.build.directory}/intellij-source/plugins/gradle/src" />
								<zip
									destfile="${project.build.directory}/intellij-source/gradle-tooling-extension-api-sources.zip"
									basedir="${project.build.directory}/intellij-source/plugins/gradle/tooling-extension-api/src" />
								<zip
									destfile="${project.build.directory}/intellij-source/gradle-tooling-extension-impl-sources.zip"
									basedir="${project.build.directory}/intellij-source/plugins/gradle/tooling-extension-impl/src" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>install-intellij-util</id>
						<phase>install</phase>
						<inherited>false</inherited>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/intellij/util.jar</file>
							<sources>${project.build.directory}/intellij-source/util-sources.zip</sources>
							<groupId>io.spring.javaformat.intellij.idea</groupId>
							<artifactId>util</artifactId>
							<version>${project.version}</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
					</execution>
					<execution>
						<id>install-intellij-util_rt</id>
						<phase>install</phase>
						<inherited>false</inherited>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/intellij/util_rt.jar</file>
							<sources>${project.build.directory}/intellij-source/util_rt-sources.zip</sources>
							<groupId>io.spring.javaformat.intellij.idea</groupId>
							<artifactId>util_rt</artifactId>
							<version>${project.version}</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
					</execution>
					<execution>
						<id>install-intellij-app</id>
						<phase>install</phase>
						<inherited>false</inherited>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/intellij/app.jar</file>
							<groupId>io.spring.javaformat.intellij.idea</groupId>
							<artifactId>app</artifactId>
							<version>${project.version}</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
					</execution>					
					<execution>
						<id>install-intellij-maven</id>
						<phase>install</phase>
						<inherited>false</inherited>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/intellij/maven.jar</file>
							<sources>${project.build.directory}/intellij-source/maven-sources.zip</sources>
							<groupId>io.spring.javaformat.intellij.idea</groupId>
							<artifactId>maven</artifactId>
							<version>${project.version}</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
					</execution>
					<execution>
						<id>install-intellij-maven-server</id>
						<phase>install</phase>
						<inherited>false</inherited>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/intellij/maven-server.jar</file>
							<groupId>io.spring.javaformat.intellij.idea</groupId>
							<artifactId>maven-server</artifactId>
							<version>${project.version}</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
					</execution>
					<execution>
						<id>install-intellij-gradle</id>
						<phase>install</phase>
						<inherited>false</inherited>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/intellij/gradle.jar</file>
							<sources>${project.build.directory}/intellij-source/gradle-sources.zip</sources>
							<groupId>io.spring.javaformat.intellij.idea</groupId>
							<artifactId>gradle</artifactId>
							<version>${project.version}</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
					</execution>
					<execution>
						<id>install-intellij-gradle-tooling-extension-api</id>
						<phase>install</phase>
						<inherited>false</inherited>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/intellij/gradle-tooling-extension-api.jar</file>
							<sources>${project.build.directory}/intellij-source/gradle-tooling-extension-api-sources.zip</sources>
							<groupId>io.spring.javaformat.intellij.idea</groupId>
							<artifactId>gradle-tooling-extension-api</artifactId>
							<version>${project.version}</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
					</execution>
					<execution>
						<id>install-intellij-jps-model</id>
						<phase>install</phase>
						<inherited>false</inherited>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/intellij/jps-model.jar</file>
							<groupId>io.spring.javaformat.intellij.idea</groupId>
							<artifactId>jps-model</artifactId>
							<version>${project.version}</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
					</execution>					
					<execution>
						<id>install-intellij-gradle-tooling-extension-impl</id>
						<phase>install</phase>
						<inherited>false</inherited>
						<goals>
							<goal>install-file</goal>
						</goals>
						<configuration>
							<file>${project.build.directory}/intellij/gradle-tooling-extension-impl.jar</file>
							<sources>${project.build.directory}/intellij-source/gradle-tooling-extension-impl-sources.zip</sources>
							<groupId>io.spring.javaformat.intellij.idea</groupId>
							<artifactId>gradle-tooling-extension-impl</artifactId>
							<version>${project.version}</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
